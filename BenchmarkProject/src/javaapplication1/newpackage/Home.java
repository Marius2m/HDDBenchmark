/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1.newpackage;

import database.BenchMarkDatabase;
import filehandling.FileSystem;
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import speed.ReadSpeed;
import speed.WriteSpeed;
import javax.swing.ButtonGroup;
import javax.swing.JDialog;

/**
 *
 * @author Marius
 */
public class Home extends javax.swing.JFrame {
    
    private boolean isRunTestClicked         = false;
    private boolean isConfigureTestClicked   = false;
    private boolean isUploadScoreClicked     = false;
    private boolean isHelpClicked            = false;
    public  boolean results                  = false;
    public  String  ReadWriteString          = "1";
    public  String  SSDHDDString             = "1";
    private boolean isDefaultTextName        = true;
    private boolean isDefaultTextLaptopModel = true;
    private boolean isDefaultTest            = false;
    private double  avgScore                  = 0;
    
    int xx;
    int xy;
    
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        setIcon();
        
        this.setLocationRelativeTo(null); // launch in the center of User screen
        
        rb_Sequential.setSelected(true); // Sequential is set as default
        rb_read.setSelected(true); // Read is set as default
        //rb_write.setSelected(false); // Write is 
        
        //Hover Menu Buttons
        isRunTestClicked = false;
        isConfigureTestClicked = true;
        isUploadScoreClicked = false;
        isHelpClicked = false;
        
        setLblColor(lbl_ConfigureTest); // Configure Test Panel is the default one
       
        tf_score.setEditable(false); // Score result is read-only
        
        //Preconfigured Initial Start
        cb_NumberOfTests.setSelectedIndex(2);
        cb_fileSizeRead.setSelectedIndex(1);
        cb_blockSizeRead.setSelectedIndex(2);
        cb_blockSizeWrite.setVisible(false);
        
        //How to use page is visibile initially
        jT_Developers.setVisible(false);
        jT_howToUse.setEditable(false);
        lbl_howToUse.setForeground(new Color(24, 186, 129));
        lbl_Developers.setForeground(new Color(168, 168, 168));
        
        groupButton(); 
      
    }

    /**
     * Grouping for Upload Score RBs and Configure Test RBs
     */
    private void groupButton(){
        // SSD or HDD -> Upload Score
        ButtonGroup bg1 = new ButtonGroup();
        bg1.add(rb_ssd);
        bg1.add(rd_hdd);
        
        // Access Type -> Configure Test
        ButtonGroup bg2 = new ButtonGroup();
        bg2.add(rb_RandomAccess);
        bg2.add(rb_Sequential);
        
        // Read or Write -> Configure Test
        ButtonGroup bg3 = new ButtonGroup();
        bg3.add(rb_read);
        bg3.add(rb_write);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_ConfigureTest = new javax.swing.JLabel();
        lbl_RunTest = new javax.swing.JLabel();
        lbl_UploadScore = new javax.swing.JLabel();
        lbl_Help = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ConfigureTestRead = new javax.swing.JPanel();
        rb_RandomAccess = new javax.swing.JRadioButton();
        rb_Sequential = new javax.swing.JRadioButton();
        lbl_RandomAccess = new javax.swing.JLabel();
        lbl_Sequential = new javax.swing.JLabel();
        lbl_read = new javax.swing.JLabel();
        lbl_write = new javax.swing.JLabel();
        rb_write = new javax.swing.JRadioButton();
        rb_read = new javax.swing.JRadioButton();
        lbl_NumberOfTests = new javax.swing.JLabel();
        lbl_FileSize = new javax.swing.JLabel();
        lbl_BlockSize = new javax.swing.JLabel();
        cb_NumberOfTests = new javax.swing.JComboBox<>();
        cb_blockSizeRead = new javax.swing.JComboBox<>();
        cb_blockSizeWrite = new javax.swing.JComboBox<>();
        cb_fileSizeRead = new javax.swing.JComboBox<>();
        cb_fileSize = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        button_defaultConfiguration = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        RunConfiguration = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        button_start = new javax.swing.JLabel();
        button_stop = new javax.swing.JLabel();
        lbl_transferRate = new javax.swing.JLabel();
        lbl_readTR = new javax.swing.JLabel();
        tf_minRead = new javax.swing.JTextField();
        tf_avgRead = new javax.swing.JTextField();
        tf_maxRead = new javax.swing.JTextField();
        lbl_writeTR = new javax.swing.JLabel();
        tf_minWrite = new javax.swing.JTextField();
        tf_avgWrite = new javax.swing.JTextField();
        tf_maxWrite = new javax.swing.JTextField();
        lbl_min = new javax.swing.JLabel();
        lbl_avg = new javax.swing.JLabel();
        lbl_max = new javax.swing.JLabel();
        tf_avgWrite1 = new javax.swing.JTextField();
        tf_avgWrite2 = new javax.swing.JTextField();
        tf_avgWrite3 = new javax.swing.JTextField();
        tf_avgWrite4 = new javax.swing.JTextField();
        tf_avgWrite5 = new javax.swing.JTextField();
        tf_avgWrite6 = new javax.swing.JTextField();
        UploadScore = new javax.swing.JPanel();
        lbl_information = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        tf_name = new javax.swing.JTextField();
        s_name = new javax.swing.JSeparator();
        lbl_laptopmodel = new javax.swing.JLabel();
        tf_laptopmodel = new javax.swing.JTextField();
        s_laptopmodel = new javax.swing.JSeparator();
        lbl_selectDrive = new javax.swing.JLabel();
        lbl_ssd = new javax.swing.JLabel();
        rb_ssd = new javax.swing.JRadioButton();
        lbl_hdd = new javax.swing.JLabel();
        rd_hdd = new javax.swing.JRadioButton();
        lbl_scoreResult = new javax.swing.JLabel();
        tf_score = new javax.swing.JTextField();
        lbl_BUpload = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lbl_BViewRanks = new javax.swing.JLabel();
        Help = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lbl_Developers = new javax.swing.JLabel();
        jT_Developers = new javax.swing.JTextArea();
        lbl_howToUse = new javax.swing.JLabel();
        jT_howToUse = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(9, 65, 109));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 399));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        lbl_ConfigureTest.setBackground(new java.awt.Color(9, 65, 109));
        lbl_ConfigureTest.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        lbl_ConfigureTest.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ConfigureTest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_ConfigureTest.setText("Configure Test");
        lbl_ConfigureTest.setMaximumSize(new java.awt.Dimension(40, 14));
        lbl_ConfigureTest.setMinimumSize(new java.awt.Dimension(40, 14));
        lbl_ConfigureTest.setOpaque(true);
        lbl_ConfigureTest.setPreferredSize(new java.awt.Dimension(40, 14));
        lbl_ConfigureTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_ConfigureTestMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_ConfigureTestMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_ConfigureTestMouseExited(evt);
            }
        });

        lbl_RunTest.setBackground(new java.awt.Color(9, 65, 109));
        lbl_RunTest.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        lbl_RunTest.setForeground(new java.awt.Color(255, 255, 255));
        lbl_RunTest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_RunTest.setText("Run Configuration");
        lbl_RunTest.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lbl_RunTest.setOpaque(true);
        lbl_RunTest.setRequestFocusEnabled(false);
        lbl_RunTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_RunTestMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_RunTestMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_RunTestMouseExited(evt);
            }
        });

        lbl_UploadScore.setBackground(new java.awt.Color(9, 65, 109));
        lbl_UploadScore.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        lbl_UploadScore.setForeground(new java.awt.Color(255, 255, 255));
        lbl_UploadScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_UploadScore.setText("Upload Score");
        lbl_UploadScore.setMaximumSize(new java.awt.Dimension(40, 14));
        lbl_UploadScore.setMinimumSize(new java.awt.Dimension(40, 14));
        lbl_UploadScore.setOpaque(true);
        lbl_UploadScore.setPreferredSize(new java.awt.Dimension(40, 14));
        lbl_UploadScore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_UploadScoreMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_UploadScoreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_UploadScoreMouseExited(evt);
            }
        });

        lbl_Help.setBackground(new java.awt.Color(9, 65, 109));
        lbl_Help.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        lbl_Help.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Help.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Help.setText("Help");
        lbl_Help.setMaximumSize(new java.awt.Dimension(40, 14));
        lbl_Help.setMinimumSize(new java.awt.Dimension(40, 14));
        lbl_Help.setOpaque(true);
        lbl_Help.setPreferredSize(new java.awt.Dimension(40, 14));
        lbl_Help.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_HelpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_HelpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_HelpMouseExited(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/final_icon_2.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_RunTest, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            .addComponent(lbl_ConfigureTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl_UploadScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl_Help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(lbl_ConfigureTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_RunTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(lbl_UploadScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_Help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(94, 94, 94))
        );

        jPanel2.setPreferredSize(new java.awt.Dimension(650, 400));
        jPanel2.setLayout(new java.awt.CardLayout());

        ConfigureTestRead.setLayout(null);
        ConfigureTestRead.add(rb_RandomAccess);
        rb_RandomAccess.setBounds(550, 260, 21, 21);

        rb_Sequential.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_SequentialActionPerformed(evt);
            }
        });
        ConfigureTestRead.add(rb_Sequential);
        rb_Sequential.setBounds(550, 220, 21, 21);

        lbl_RandomAccess.setText("Random Access");
        ConfigureTestRead.add(lbl_RandomAccess);
        lbl_RandomAccess.setBounds(410, 260, 130, 14);

        lbl_Sequential.setText("Sequential Access");
        ConfigureTestRead.add(lbl_Sequential);
        lbl_Sequential.setBounds(410, 220, 130, 14);

        lbl_read.setText("Read");
        ConfigureTestRead.add(lbl_read);
        lbl_read.setBounds(410, 140, 80, 14);

        lbl_write.setText("Write");
        ConfigureTestRead.add(lbl_write);
        lbl_write.setBounds(410, 180, 70, 14);

        rb_write.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_writeMouseClicked(evt);
            }
        });
        ConfigureTestRead.add(rb_write);
        rb_write.setBounds(550, 180, 21, 21);

        rb_read.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rb_readMouseClicked(evt);
            }
        });
        ConfigureTestRead.add(rb_read);
        rb_read.setBounds(550, 140, 21, 21);

        lbl_NumberOfTests.setText("Number of Tests");
        ConfigureTestRead.add(lbl_NumberOfTests);
        lbl_NumberOfTests.setBounds(50, 140, 140, 14);

        lbl_FileSize.setText("File Size");
        ConfigureTestRead.add(lbl_FileSize);
        lbl_FileSize.setBounds(50, 190, 140, 14);

        lbl_BlockSize.setText("Block Size");
        ConfigureTestRead.add(lbl_BlockSize);
        lbl_BlockSize.setBounds(50, 240, 140, 14);

        cb_NumberOfTests.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ConfigureTestRead.add(cb_NumberOfTests);
        cb_NumberOfTests.setBounds(190, 140, 100, 20);

        cb_blockSizeRead.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "512 bytes", "4 KB", "64 KB", "128 KB", "1 MB" }));
        ConfigureTestRead.add(cb_blockSizeRead);
        cb_blockSizeRead.setBounds(190, 240, 100, 20);

        cb_blockSizeWrite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "512 bytes", "4 KB", "64 KB", "128 KB", "1 MB" }));
        cb_blockSizeWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_blockSizeWriteActionPerformed(evt);
            }
        });
        ConfigureTestRead.add(cb_blockSizeWrite);
        cb_blockSizeWrite.setBounds(190, 240, 100, 20);

        cb_fileSizeRead.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5 GB", "6 GB", "7 GB", "8 GB", "9 GB", "10 GB" }));
        ConfigureTestRead.add(cb_fileSizeRead);
        cb_fileSizeRead.setBounds(190, 190, 100, 20);

        cb_fileSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 GB", "2 GB", "3 GB", "4 GB", "5 GB" }));
        ConfigureTestRead.add(cb_fileSize);
        cb_fileSize.setBounds(190, 190, 100, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/normal.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel4MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 612, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        ConfigureTestRead.add(jPanel3);
        jPanel3.setBounds(0, 0, 644, 51);

        button_defaultConfiguration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_default_config.png"))); // NOI18N
        button_defaultConfiguration.setText("jLabel2");
        button_defaultConfiguration.setPreferredSize(new java.awt.Dimension(177, 52));
        button_defaultConfiguration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_defaultConfigurationMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_defaultConfigurationMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_defaultConfigurationMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                button_defaultConfigurationMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                button_defaultConfigurationMouseReleased(evt);
            }
        });
        ConfigureTestRead.add(button_defaultConfiguration);
        button_defaultConfiguration.setBounds(70, 320, 177, 52);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/separator_line.png"))); // NOI18N
        ConfigureTestRead.add(jLabel2);
        jLabel2.setBounds(350, 70, 10, 270);

        jPanel2.add(ConfigureTestRead, "card2");

        RunConfiguration.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/normal.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel5MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(529, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        RunConfiguration.add(jPanel4);
        jPanel4.setBounds(79, 0, 571, 51);

        button_start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/start_button_default.png"))); // NOI18N
        button_start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_startMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_startMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_startMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                button_startMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                button_startMouseReleased(evt);
            }
        });
        RunConfiguration.add(button_start);
        button_start.setBounds(70, 320, 177, 52);

        button_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop_button_default.png"))); // NOI18N
        button_stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_stopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_stopMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                button_stopMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                button_stopMouseReleased(evt);
            }
        });
        RunConfiguration.add(button_stop);
        button_stop.setBounds(420, 320, 177, 52);

        lbl_transferRate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_transferRate.setText("Transfer Rate");
        RunConfiguration.add(lbl_transferRate);
        lbl_transferRate.setBounds(270, 70, 110, 22);

        lbl_readTR.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_readTR.setText("Read");
        RunConfiguration.add(lbl_readTR);
        lbl_readTR.setBounds(180, 130, 40, 14);

        tf_minRead.setEditable(false);
        tf_minRead.setBackground(new java.awt.Color(214, 217, 223));
        tf_minRead.setText("0");
        tf_minRead.setToolTipText("");
        tf_minRead.setBorder(null);
        RunConfiguration.add(tf_minRead);
        tf_minRead.setBounds(180, 180, 40, 20);

        tf_avgRead.setEditable(false);
        tf_avgRead.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgRead.setText("0");
        tf_avgRead.setBorder(null);
        RunConfiguration.add(tf_avgRead);
        tf_avgRead.setBounds(180, 210, 40, 20);

        tf_maxRead.setEditable(false);
        tf_maxRead.setBackground(new java.awt.Color(214, 217, 223));
        tf_maxRead.setText("0");
        tf_maxRead.setBorder(null);
        RunConfiguration.add(tf_maxRead);
        tf_maxRead.setBounds(180, 240, 40, 20);

        lbl_writeTR.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_writeTR.setText("Write");
        RunConfiguration.add(lbl_writeTR);
        lbl_writeTR.setBounds(420, 130, 33, 17);

        tf_minWrite.setEditable(false);
        tf_minWrite.setBackground(new java.awt.Color(214, 217, 223));
        tf_minWrite.setText("0");
        tf_minWrite.setBorder(null);
        RunConfiguration.add(tf_minWrite);
        tf_minWrite.setBounds(420, 180, 40, 20);

        tf_avgWrite.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgWrite.setText("0");
        tf_avgWrite.setBorder(null);
        RunConfiguration.add(tf_avgWrite);
        tf_avgWrite.setBounds(420, 240, 40, 20);

        tf_maxWrite.setEditable(false);
        tf_maxWrite.setBackground(new java.awt.Color(214, 217, 223));
        tf_maxWrite.setText("0");
        tf_maxWrite.setBorder(null);
        RunConfiguration.add(tf_maxWrite);
        tf_maxWrite.setBounds(420, 210, 40, 20);

        lbl_min.setText("Minimum");
        RunConfiguration.add(lbl_min);
        lbl_min.setBounds(70, 180, 60, 14);

        lbl_avg.setText("Average");
        RunConfiguration.add(lbl_avg);
        lbl_avg.setBounds(70, 210, 60, 14);

        lbl_max.setText("Maximum");
        RunConfiguration.add(lbl_max);
        lbl_max.setBounds(70, 240, 60, 14);

        tf_avgWrite1.setEditable(false);
        tf_avgWrite1.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgWrite1.setText("MB/sec");
        tf_avgWrite1.setBorder(null);
        RunConfiguration.add(tf_avgWrite1);
        tf_avgWrite1.setBounds(220, 180, 59, 20);

        tf_avgWrite2.setEditable(false);
        tf_avgWrite2.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgWrite2.setText("MB/sec");
        tf_avgWrite2.setBorder(null);
        RunConfiguration.add(tf_avgWrite2);
        tf_avgWrite2.setBounds(220, 210, 59, 20);

        tf_avgWrite3.setEditable(false);
        tf_avgWrite3.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgWrite3.setText("MB/sec");
        tf_avgWrite3.setBorder(null);
        RunConfiguration.add(tf_avgWrite3);
        tf_avgWrite3.setBounds(220, 240, 59, 20);

        tf_avgWrite4.setEditable(false);
        tf_avgWrite4.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgWrite4.setText("MB/sec");
        tf_avgWrite4.setBorder(null);
        RunConfiguration.add(tf_avgWrite4);
        tf_avgWrite4.setBounds(460, 240, 59, 20);

        tf_avgWrite5.setEditable(false);
        tf_avgWrite5.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgWrite5.setText("MB/sec");
        tf_avgWrite5.setBorder(null);
        RunConfiguration.add(tf_avgWrite5);
        tf_avgWrite5.setBounds(460, 180, 59, 20);

        tf_avgWrite6.setEditable(false);
        tf_avgWrite6.setBackground(new java.awt.Color(214, 217, 223));
        tf_avgWrite6.setText("MB/sec");
        tf_avgWrite6.setBorder(null);
        RunConfiguration.add(tf_avgWrite6);
        tf_avgWrite6.setBounds(460, 210, 59, 20);

        jPanel2.add(RunConfiguration, "card2");

        UploadScore.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_information.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_information.setText("Information");
        UploadScore.add(lbl_information, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 70, -1, -1));

        lbl_name.setText("Name");
        UploadScore.add(lbl_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 126, -1, -1));

        tf_name.setBackground(new java.awt.Color(214, 217, 223));
        tf_name.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        tf_name.setForeground(new java.awt.Color(153, 153, 153));
        tf_name.setText("  nickname or name");
        tf_name.setBorder(null);
        tf_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_nameFocusLost(evt);
            }
        });
        tf_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_nameMouseClicked(evt);
            }
        });
        UploadScore.add(tf_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 156, 177, 10));
        UploadScore.add(s_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 172, 177, 10));

        lbl_laptopmodel.setText("Laptop Model");
        UploadScore.add(lbl_laptopmodel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        tf_laptopmodel.setBackground(new java.awt.Color(214, 217, 223));
        tf_laptopmodel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        tf_laptopmodel.setForeground(new java.awt.Color(153, 153, 153));
        tf_laptopmodel.setText("  leave blank if you have a desktop");
        tf_laptopmodel.setBorder(null);
        tf_laptopmodel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_laptopmodelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_laptopmodelFocusLost(evt);
            }
        });
        tf_laptopmodel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_laptopmodelMouseClicked(evt);
            }
        });
        UploadScore.add(tf_laptopmodel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 177, -1));
        UploadScore.add(s_laptopmodel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 177, 10));

        lbl_selectDrive.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_selectDrive.setText("Select Drive");
        UploadScore.add(lbl_selectDrive, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 70, 162, -1));

        lbl_ssd.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lbl_ssd.setText("SSD");
        lbl_ssd.setToolTipText("Solid State Drive");
        UploadScore.add(lbl_ssd, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 126, -1, -1));

        rb_ssd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rb_ssdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rb_ssdFocusLost(evt);
            }
        });
        UploadScore.add(rb_ssd, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 126, -1, -1));

        lbl_hdd.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lbl_hdd.setText("HDD");
        lbl_hdd.setToolTipText("Hard Disk Drive");
        UploadScore.add(lbl_hdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 154, -1, -1));

        rd_hdd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rd_hddFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rd_hddFocusLost(evt);
            }
        });
        UploadScore.add(rd_hdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 154, -1, -1));

        lbl_scoreResult.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_scoreResult.setText("Score Result");
        UploadScore.add(lbl_scoreResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(499, 70, -1, -1));

        tf_score.setBackground(new java.awt.Color(214, 217, 223));
        tf_score.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tf_score.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_score.setText("score MB/s");
        tf_score.setBorder(null);
        tf_score.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_scoreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_scoreFocusLost(evt);
            }
        });
        tf_score.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tf_scoreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tf_scoreMouseExited(evt);
            }
        });
        UploadScore.add(tf_score, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 147, 80));

        lbl_BUpload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_default.png"))); // NOI18N
        lbl_BUpload.setText("jLabel1");
        lbl_BUpload.setPreferredSize(new java.awt.Dimension(177, 52));
        lbl_BUpload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_BUploadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_BUploadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_BUploadMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_BUploadMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lbl_BUploadMouseReleased(evt);
            }
        });
        UploadScore.add(lbl_BUpload, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/normal.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel7MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel7MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel7MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(608, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        UploadScore.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, -1));

        lbl_BViewRanks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view_ranks_button_default.png"))); // NOI18N
        lbl_BViewRanks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_BViewRanksMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_BViewRanksMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_BViewRanksMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_BViewRanksMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lbl_BViewRanksMouseReleased(evt);
            }
        });
        UploadScore.add(lbl_BViewRanks, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 320, -1, -1));

        jPanel2.add(UploadScore, "card2");

        Help.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/normal.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel6MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel6MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel6MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(608, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        Help.add(jPanel5);
        jPanel5.setBounds(0, 0, 650, 51);

        lbl_Developers.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_Developers.setText("Developers");
        lbl_Developers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_DevelopersMouseClicked(evt);
            }
        });
        Help.add(lbl_Developers);
        lbl_Developers.setBounds(290, 60, 86, 22);

        jT_Developers.setEditable(false);
        jT_Developers.setBackground(new java.awt.Color(214, 217, 223));
        jT_Developers.setColumns(20);
        jT_Developers.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jT_Developers.setRows(5);
        jT_Developers.setText("Leonard FILIP\n\nIulia JURCUȚA\n\nMarius MIRCEA\n\nGeorge OPREA\n\nNadina ȘTREANGĂ");
        jT_Developers.setBorder(null);
        Help.add(jT_Developers);
        jT_Developers.setBounds(290, 140, 116, 150);

        lbl_howToUse.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_howToUse.setText("How to use the benchmark");
        lbl_howToUse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_howToUseMouseClicked(evt);
            }
        });
        Help.add(lbl_howToUse);
        lbl_howToUse.setBounds(50, 60, 240, 22);

        jT_howToUse.setColumns(20);
        jT_howToUse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jT_howToUse.setRows(5);
        jT_howToUse.setText("     The benchmark allows both reading writing test (sequentially, or random accessing). Reading is useful\nfor knowing how fast (long) does it take to open (read) something from our device. Writing is quite\nthe opposite, it tells how fast (long) it takes to save (write) something to our device\n\n   1. Go to Configure Test screen\n   2. Select a number of tests (the more tests you choose, the more accurate results, but the more it \ntakes to finish the test)\n   2. Select a file Size (increases the accuracy)\n   3. Block size (the higher the block size, the higher the speed)\n   4. Pick either a read test or a write test\n   5. Under Access pick either Sequential (reads records in order) or Random (reads records in any order)\n   6. The test can now be ran simply by going into Run Configuration page and clicking the Start button\n   7. For the benchmark to finish, it will take some time depending on your hardware\n* 8. After the test was finished, you may upload your score and compare it with other users\n\n* - in order to upload your score you must run the test with default settings (simply by clicking the \nSet Default Configurations button)");
        Help.add(jT_howToUse);
        jT_howToUse.setBounds(20, 110, 600, 270);

        jPanel2.add(Help, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 644, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method that displays Run Configuration panel (hides others)
     * @param evt 
     */
    private void lbl_RunTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_RunTestMouseClicked
        // Hovering & Selected Button
        isRunTestClicked = true;
        isConfigureTestClicked = false;
        isUploadScoreClicked = false;
        isHelpClicked = false;
        setLblColor(lbl_RunTest);
        resetLblColor(lbl_ConfigureTest);
        resetLblColor(lbl_UploadScore); 
        resetLblColor(lbl_Help);
        
        // Switch between JPanels
        ConfigureTestRead.setVisible(false);
        RunConfiguration.setVisible(true);
        UploadScore.setVisible(false);
        Help.setVisible(false);
        
        // Run Test Configuration with our Configuration (or default)
        String s = "";
        if(rb_RandomAccess.isSelected())
            s =  s + " Random ";//jt_random.setText("Random");
        if(rb_Sequential.isSelected())
            s = s + " Sequential ";
        if(rb_write.isSelected())
            s = s + " Write ";
        if(rb_read.isSelected())
            s = s + " Read ";
        s = s + cb_NumberOfTests.getSelectedItem() + " " + cb_blockSizeRead.getSelectedItem() + " " + cb_blockSizeWrite.getSelectedItem() + 
                " " + cb_fileSizeRead.getSelectedItem() + " " + cb_fileSize.getSelectedItem();
       // testtext.setText(s);
       // jt_nr.setText((String) cb_NumberOfTests.getSelectedItem());

    }//GEN-LAST:event_lbl_RunTestMouseClicked

    /**
     * Method that displays Configure Test panel (hides others)
     * @param evt 
     */
    private void lbl_ConfigureTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_ConfigureTestMouseClicked
       // Hovering & Selected Button
        isRunTestClicked = false;
        isConfigureTestClicked = true;
        isUploadScoreClicked = false;
        isHelpClicked = false;
        setLblColor(lbl_ConfigureTest);   
        resetLblColor(lbl_RunTest);
        resetLblColor(lbl_UploadScore);
        resetLblColor(lbl_Help);
        
        // Switch between JPanels
        ConfigureTestRead.setVisible(true);
        RunConfiguration.setVisible(false);
        UploadScore.setVisible(false);
        Help.setVisible(false);
    }//GEN-LAST:event_lbl_ConfigureTestMouseClicked

    /**
     * Method that displays Upload Score panel (hides others)
     * @param evt 
     */
    private void lbl_UploadScoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_UploadScoreMouseClicked
        // Hovering & Selected Button
        isRunTestClicked = false;
        isConfigureTestClicked = false;
        isUploadScoreClicked = true;
        isHelpClicked = false;
        setLblColor(lbl_UploadScore);
        resetLblColor(lbl_RunTest);
        resetLblColor(lbl_ConfigureTest);
        resetLblColor(lbl_Help);
       
        // Switch between JPanels
        ConfigureTestRead.setVisible(false);
        RunConfiguration.setVisible(false);
        UploadScore.setVisible(true);
        Help.setVisible(false);
    }//GEN-LAST:event_lbl_UploadScoreMouseClicked

     /**
     * Method that displays Help panel (hides others)
     * @param evt 
     */
    private void lbl_HelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_HelpMouseClicked
        // Hovering & Selected Button
        isRunTestClicked = false;
        isConfigureTestClicked = false;
        isUploadScoreClicked = false;
        isHelpClicked = true;
        setLblColor(lbl_Help);
        resetLblColor(lbl_RunTest);
        resetLblColor(lbl_ConfigureTest);
        resetLblColor(lbl_UploadScore);
        
        // Switch between JPanels
        ConfigureTestRead.setVisible(false);
        RunConfiguration.setVisible(false);
        UploadScore.setVisible(false);
        Help.setVisible(true);
    }//GEN-LAST:event_lbl_HelpMouseClicked

    // Next 8 methods are for Hovering Effect
    private void lbl_RunTestMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_RunTestMouseEntered
        if(isRunTestClicked == false){
            setLblHoverColor(lbl_RunTest);
         //   resetLblColor(lbl_ConfigureTest);
           // resetLblColor(lbl_UploadScore);
          //  resetLblColor(lbl_Help);
        }
    }//GEN-LAST:event_lbl_RunTestMouseEntered

    private void lbl_ConfigureTestMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_ConfigureTestMouseEntered
        if(isConfigureTestClicked == false){
          //  resetLblColor(lbl_RunTest);
           // resetLblColor(lbl_UploadScore);
          //  resetLblColor(lbl_Help);
            setLblHoverColor(lbl_ConfigureTest);
        }
    }//GEN-LAST:event_lbl_ConfigureTestMouseEntered

    private void lbl_UploadScoreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_UploadScoreMouseEntered
        if(isUploadScoreClicked == false){
         //   resetLblColor(lbl_RunTest);
          //  resetLblColor(lbl_ConfigureTest);
           // resetLblColor(lbl_Help);
            setLblHoverColor(lbl_UploadScore);
        }
    }//GEN-LAST:event_lbl_UploadScoreMouseEntered

    private void lbl_HelpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_HelpMouseEntered
        if(isHelpClicked == false){
        //=    resetLblColor(lbl_RunTest);
          //  resetLblColor(lbl_ConfigureTest);
          //  resetLblColor(lbl_UploadScore);
            setLblHoverColor(lbl_Help);
        }
    }//GEN-LAST:event_lbl_HelpMouseEntered

    private void lbl_RunTestMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_RunTestMouseExited
        if(isConfigureTestClicked == false)
            resetLblColor(lbl_ConfigureTest);
        if(isUploadScoreClicked == false)
            resetLblColor(lbl_UploadScore);
        if(isHelpClicked == false)
            resetLblColor(lbl_Help);
    }//GEN-LAST:event_lbl_RunTestMouseExited

    private void lbl_ConfigureTestMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_ConfigureTestMouseExited
        if(isRunTestClicked == false)
            resetLblColor(lbl_RunTest); 
        if(isUploadScoreClicked == false)
            resetLblColor(lbl_UploadScore);
        if(isHelpClicked == false)
            resetLblColor(lbl_Help);
    }//GEN-LAST:event_lbl_ConfigureTestMouseExited

    private void lbl_UploadScoreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_UploadScoreMouseExited
        if(isRunTestClicked == false)
            resetLblColor(lbl_RunTest); 
        if(isConfigureTestClicked == false)
            resetLblColor(lbl_ConfigureTest);
        if(isHelpClicked == false)
            resetLblColor(lbl_Help);
    }//GEN-LAST:event_lbl_UploadScoreMouseExited

    private void lbl_HelpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_HelpMouseExited
        if(isRunTestClicked == false)
            resetLblColor(lbl_RunTest); 
        if(isConfigureTestClicked == false)
            resetLblColor(lbl_ConfigureTest);
        if(isUploadScoreClicked == false)
            resetLblColor(lbl_UploadScore);
    }//GEN-LAST:event_lbl_HelpMouseExited

    // Needs updating
    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        if(isRunTestClicked == true){
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_UploadScore);
            resetLblColor(lbl_Help);
            setLblColor(lbl_RunTest);
        }
        if(isConfigureTestClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_UploadScore);
            resetLblColor(lbl_Help);
            setLblColor(lbl_ConfigureTest);
        }
        if(isUploadScoreClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_Help);
            setLblColor(lbl_UploadScore);
        }
        if(isHelpClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_UploadScore);
            setLblColor(lbl_Help);
        }
    }//GEN-LAST:event_jPanel1MouseEntered

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        if(isRunTestClicked == true){
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_UploadScore);
            resetLblColor(lbl_Help);
            setLblColor(lbl_RunTest);
        }
        if(isConfigureTestClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_UploadScore);
            resetLblColor(lbl_Help);
        }
        if(isUploadScoreClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_Help);
        }
        if(isHelpClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_UploadScore);
        }
    }//GEN-LAST:event_formMouseEntered

    /**
     * Method that gets the current position of mouse on screen
     * @param evt 
     */
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_formMousePressed

    /**
     * Ability to freely drag the app around
     * @param evt 
     */
    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx, y-xy);
    }//GEN-LAST:event_formMouseDragged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(isRunTestClicked == true){
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_UploadScore);
            resetLblColor(lbl_Help);
            setLblColor(lbl_RunTest);
        }
        if(isConfigureTestClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_UploadScore);
            resetLblColor(lbl_Help);
            setLblColor(lbl_ConfigureTest);
        }
        if(isUploadScoreClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_Help);
            setLblColor(lbl_UploadScore);
        }
        if(isHelpClicked == true){
            resetLblColor(lbl_RunTest);
            resetLblColor(lbl_ConfigureTest);
            resetLblColor(lbl_UploadScore);
            setLblColor(lbl_Help);
        }
    }//GEN-LAST:event_formWindowActivated

    private void tf_laptopmodelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_laptopmodelFocusGained
        lbl_laptopmodel.setForeground(new Color(9, 65, 109)); //focused -> blue
        lbl_information.setForeground(new Color(24, 186, 129)); //focused -> green
    }//GEN-LAST:event_tf_laptopmodelFocusGained

    private void tf_laptopmodelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_laptopmodelFocusLost
        lbl_laptopmodel.setForeground(new Color(0, 0, 0)); //unfocused -> black
        lbl_information.setForeground(new Color(0, 0, 0)); //unfocused -> black
    }//GEN-LAST:event_tf_laptopmodelFocusLost

    private void lbl_BUploadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BUploadMouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_hoverpsd.png"));
        lbl_BUpload.setIcon(IB);
    }//GEN-LAST:event_lbl_BUploadMouseEntered

    private void lbl_BUploadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BUploadMouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_default.png"));
        lbl_BUpload.setIcon(IB);
    }//GEN-LAST:event_lbl_BUploadMouseExited

    private void lbl_BUploadMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BUploadMousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_pressed.png"));
        lbl_BUpload.setIcon(IB);
    }//GEN-LAST:event_lbl_BUploadMousePressed

    private void lbl_BUploadMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BUploadMouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_hoverpsd.png"));
        lbl_BUpload.setIcon(IB);
    }//GEN-LAST:event_lbl_BUploadMouseReleased

    private void jLabel4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel4.setIcon(IB);
        System.exit(0);
    }//GEN-LAST:event_jLabel4MouseReleased

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hovered.png"));
        jLabel4.setIcon(IB);
    }//GEN-LAST:event_jLabel4MousePressed

    private void jLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/normal.png"));
        jLabel4.setIcon(IB);
    }//GEN-LAST:event_jLabel4MouseExited

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel4.setIcon(IB);
    }//GEN-LAST:event_jLabel4MouseEntered
                                      
    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel5.setIcon(IB);
    }//GEN-LAST:event_jLabel5MouseEntered

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/normal.png"));
        jLabel5.setIcon(IB);
    }//GEN-LAST:event_jLabel5MouseExited

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hovered.png"));
    }//GEN-LAST:event_jLabel5MousePressed

    private void jLabel5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel5.setIcon(IB);
        System.exit(0);
    }//GEN-LAST:event_jLabel5MouseReleased

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel6.setIcon(IB);
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/normal.png"));
        jLabel6.setIcon(IB);
    }//GEN-LAST:event_jLabel6MouseExited

    private void jLabel6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hovered.png"));
        jLabel6.setIcon(IB);
    }//GEN-LAST:event_jLabel6MousePressed

    private void jLabel6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel6.setIcon(IB);
        System.exit(0);
    }//GEN-LAST:event_jLabel6MouseReleased

    private void jLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel7.setIcon(IB);
    }//GEN-LAST:event_jLabel7MouseEntered

    private void jLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/normal.png"));
        jLabel7.setIcon(IB);
    }//GEN-LAST:event_jLabel7MouseExited

    private void jLabel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hovered.png"));
        jLabel7.setIcon(IB);
    }//GEN-LAST:event_jLabel7MousePressed

    private void jLabel7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/hover.png"));
        jLabel7.setIcon(IB);
        System.exit(0);
    }//GEN-LAST:event_jLabel7MouseReleased

    private void tf_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_nameMouseClicked
        if(isDefaultTextName == true){
            tf_name.setText("");
            Font font1 = new Font("Tahoma", Font.PLAIN, 11);
            tf_name.setFont(font1);
            tf_name.setForeground(Color.BLACK);
            isDefaultTextName = false;
        }
        tf_name.getCaret().setBlinkRate(750); // stop blinking once user leaves textfield 
    }//GEN-LAST:event_tf_nameMouseClicked

    private void tf_laptopmodelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_laptopmodelMouseClicked
        if(isDefaultTextLaptopModel == true){
            tf_laptopmodel.setText("");
            Font font1 = new Font("Tahoma", Font.PLAIN, 11);
            tf_laptopmodel.setFont(font1);
            tf_laptopmodel.setForeground(Color.BLACK);
            isDefaultTextLaptopModel = false;
        }
        tf_laptopmodel.getCaret().setBlinkRate(750); //stop blinking once user leaves textfield
    }//GEN-LAST:event_tf_laptopmodelMouseClicked

    private void tf_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_nameFocusGained
        lbl_name.setForeground(new Color(9, 65, 109)); //focused -> blue
        lbl_information.setForeground(new Color(24, 186, 129)); //focused -> green
    }//GEN-LAST:event_tf_nameFocusGained

    private void tf_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_nameFocusLost
        lbl_name.setForeground(new Color(0, 0, 0)); //unfocused -> black
        lbl_information.setForeground(new Color(0, 0, 0)); //unfocused -> black
    }//GEN-LAST:event_tf_nameFocusLost

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        //Design for Upload Score Page
        lbl_name.setForeground(new Color(0, 0, 0)); // unfocused -> black
        lbl_laptopmodel.setForeground(new Color(0, 0, 0));
        lbl_information.setForeground(new Color(0, 0, 0)); // unfocused -> black
        lbl_selectDrive.setForeground(new Color(0, 0 ,0)); // unfocused -> black
        
        //Other
        
    }//GEN-LAST:event_formMouseClicked

    private void button_startMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_startMouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/start_button_hover.png"));
        button_start.setIcon(IB);
    }//GEN-LAST:event_button_startMouseEntered

    private void button_startMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_startMouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/start_button_default.png"));
        button_start.setIcon(IB);
    }//GEN-LAST:event_button_startMouseExited

    private void button_startMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_startMousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/start_button_pressed.png"));
        button_start.setIcon(IB);
    }//GEN-LAST:event_button_startMousePressed

    private void button_startMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_startMouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/start_button_hover.png"));
        button_start.setIcon(IB);
    }//GEN-LAST:event_button_startMouseReleased

    private void button_stopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_stopMouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/stop_button_hover.png"));
        button_stop.setIcon(IB);
    }//GEN-LAST:event_button_stopMouseEntered

    private void button_stopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_stopMouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/stop_button_default.png"));
        button_stop.setIcon(IB);
    }//GEN-LAST:event_button_stopMouseExited

    private void button_stopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_stopMousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/stop_button_pressed.png"));
        button_stop.setIcon(IB);
    }//GEN-LAST:event_button_stopMousePressed

    private void button_stopMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_stopMouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/stop_button_hover.png"));
        button_stop.setIcon(IB);
    }//GEN-LAST:event_button_stopMouseReleased

    private void rb_ssdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rb_ssdFocusGained
        lbl_selectDrive.setForeground(new Color(24, 186, 129)); //focused -> green
    }//GEN-LAST:event_rb_ssdFocusGained

    private void rb_ssdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rb_ssdFocusLost
        lbl_selectDrive.setForeground(new Color(0, 0, 0)); //unfocused -> black
    }//GEN-LAST:event_rb_ssdFocusLost

    private void rd_hddFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rd_hddFocusGained
        lbl_selectDrive.setForeground(new Color(24, 186, 129)); //focused -> green
    }//GEN-LAST:event_rd_hddFocusGained

    private void rd_hddFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rd_hddFocusLost
       lbl_selectDrive.setForeground(new Color(0, 0, 0)); //unfocused -> black
    }//GEN-LAST:event_rd_hddFocusLost

    private void tf_scoreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_scoreFocusGained
        lbl_scoreResult.setForeground(new Color(24, 186, 129));
    }//GEN-LAST:event_tf_scoreFocusGained

    private void tf_scoreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_scoreFocusLost
       lbl_scoreResult.setForeground(new Color(0, 0 ,0)); 
    }//GEN-LAST:event_tf_scoreFocusLost

    private void tf_scoreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_scoreMouseEntered
        lbl_scoreResult.setForeground(new Color(24, 186, 129));
    }//GEN-LAST:event_tf_scoreMouseEntered

    private void tf_scoreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_scoreMouseExited
        lbl_scoreResult.setForeground(new Color(0, 0 ,0));
    }//GEN-LAST:event_tf_scoreMouseExited

    private void button_defaultConfigurationMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_defaultConfigurationMouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_hover_config.png"));
        button_defaultConfiguration.setIcon(IB);
    }//GEN-LAST:event_button_defaultConfigurationMouseEntered

    private void button_defaultConfigurationMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_defaultConfigurationMouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_default_config.png"));
        button_defaultConfiguration.setIcon(IB);
    }//GEN-LAST:event_button_defaultConfigurationMouseExited

    private void button_defaultConfigurationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_defaultConfigurationMousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_pressed_config.png"));
        button_defaultConfiguration.setIcon(IB);
    }//GEN-LAST:event_button_defaultConfigurationMousePressed

    private void button_defaultConfigurationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_defaultConfigurationMouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/button_hover_config.png"));
        button_defaultConfiguration.setIcon(IB);
    }//GEN-LAST:event_button_defaultConfigurationMouseReleased

    private void button_defaultConfigurationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_defaultConfigurationMouseClicked
        isDefaultTest = true;
        
        if(rb_RandomAccess.isSelected()){
            rb_Sequential.setSelected(true);
            cb_fileSize.setVisible(false);
            cb_fileSizeRead.setVisible(true);
            cb_blockSizeWrite.setVisible(false);
            cb_blockSizeRead.setVisible(true);
        }
        if(rb_write.isSelected()){
            rb_read.setSelected(true);
            cb_fileSize.setVisible(false);
            cb_fileSizeRead.setVisible(true);
            cb_blockSizeWrite.setVisible(false);
            cb_blockSizeRead.setVisible(true);
        }
        
        cb_NumberOfTests.setSelectedIndex(2); // 
        //cb_fileSize.setSelectedIndex(0);
        cb_fileSizeRead.setSelectedIndex(1);
        cb_blockSizeRead.setSelectedIndex(2);
        //cb_blockSizeWrite.setSelectedIndex(0);
        JOptionPane.showMessageDialog(null, "The test is now configured with default settings:\nSequential Reading of a 6GB file, using a 64KB buffer", null, JOptionPane.PLAIN_MESSAGE);
        //JOptionPane.showMessageDialog(null, "Please run a test first", null, JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_button_defaultConfigurationMouseClicked

    /**
    * Method that start the benchmark with given parameters set by user (or default)
    * @param evt 
    */
    private void button_startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_startMouseClicked
        int access, readwrite, nrTests, fileSize, blockSize;
        access = Integer.parseInt(getReadWriteMethod());
        readwrite = Integer.parseInt(getReadWriteTest());
        nrTests = Integer.parseInt(getNumberOfTests());
        //fileSize = Integer.parseInt((getFileSize()).split(" ")[0]);
        
        if(isDefaultTest == true){
            ReadSpeed defaultTest = new ReadSpeed();
            defaultTest.read(); 
            
            avgScore = defaultTest.getAvgScore();
            tf_minRead.setText(String.format("%.1f", defaultTest.getMinScore()));
            tf_avgRead.setText(String.format("%.1f", avgScore));
            tf_maxRead.setText(String.format("%.1f", defaultTest.getMaxScore()));
            
            //String score = Double.toString(avgScore)
            tf_score.setText(Double.toString(avgScore) + " MB/s");
            System.out.println(avgScore);
            defaultTest = null;
                        JOptionPane msg = new JOptionPane("Test has finished!", JOptionPane.WARNING_MESSAGE);

            //dlg.setVisible(false);
        }else{ //isDefaultTest == false 
            if(access == 1){ //Sequential
                if(rb_read.isSelected() == true){ //read test - S E Q
                    blockSize = getBlockSizeRead();
                    fileSize = Integer.parseInt((getFileSizeRead()).split(" ")[0]);
                    if(blockSize == 64 * 1024 && fileSize == 6 && nrTests == 3)
                        isDefaultTest = true;
                    
                    ReadSpeed bench = new ReadSpeed(blockSize, "seq", nrTests, fileSize);
                    bench.read();

                    avgScore = bench.getAvgScore();
                    tf_minRead.setText(String.format("%.1f", bench.getMinScore()));
                    tf_avgRead.setText(String.format("%.1f", avgScore));
                    tf_maxRead.setText(String.format("%.1f", bench.getMaxScore()));
                    System.out.println(avgScore);

                    //String score = Double.toString(avgScore)
                    tf_score.setText(Double.toString(avgScore) + " MB/s");
                    bench = null;
                }else if(rb_write.isSelected() == true){ //write test - S E Q
                    blockSize = getBlockSizeWrite();
                    fileSize = Integer.parseInt((getFileSize()).split(" ")[0]);

                    WriteSpeed bench = new WriteSpeed(blockSize, "seq", nrTests, fileSize * 1024);
                    bench.write();

                    avgScore = bench.getAvgScore();
                    tf_minWrite.setText(String.format("%.1f", bench.getMinScore()));
                    tf_avgWrite.setText(String.format("%.1f", avgScore));
                    tf_maxWrite.setText(String.format("%.1f", bench.getMaxScore()));
                    System.out.println(bench.getAvgScore());

                    tf_score.setText(Double.toString(avgScore) + " MB/s");
                    bench = null;
                }
            }
            else if(access == 0){ //Random
                if(rb_read.isSelected() == true){ //read test - R A N D
                    blockSize = getBlockSizeRead();
                    fileSize = Integer.parseInt((getFileSizeRead()).split(" ")[0]);

                    ReadSpeed bench = new ReadSpeed(blockSize, "rand", nrTests, fileSize);
                    bench.read();

                    avgScore = bench.getAvgScore();
                    tf_minRead.setText(String.format("%.1f", bench.getMinScore()));
                    tf_avgRead.setText(String.format("%.1f", avgScore));
                    tf_maxRead.setText(String.format("%.1f", bench.getMaxScore()));
                    System.out.println(avgScore);

                    tf_score.setText(Double.toString(avgScore) + " MB/s");
                    bench = null;
                }else if(rb_write.isSelected() == true){ //read test - R A N D
                    blockSize = getBlockSizeWrite();
                    fileSize = Integer.parseInt((getFileSize()).split(" ")[0]);

                    WriteSpeed bench = new WriteSpeed(blockSize, "rand", nrTests, fileSize * 1024);
                    bench.write();

                    avgScore = bench.getAvgScore();
                    tf_minWrite.setText(String.format("%.1f", bench.getMinScore()));
                    tf_avgWrite.setText(String.format("%.1f", avgScore));
                    tf_maxWrite.setText(String.format("%.1f", bench.getMaxScore()));
                    System.out.println(avgScore);

                    tf_score.setText(Double.toString(avgScore) + " MB/s");
                    bench = null;
                }
            }
        }
        //String res = "ReadWriteMethod " + access + "...readwrite " + readwrite + "... NrTests " + nrTests + "... File Size " + "... Block Size "+ getBlockSizeRead() + "  <block size> " + getBlockSizeWrite();
        //testtext.setText(res);
    }//GEN-LAST:event_button_startMouseClicked

    private void lbl_BUploadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BUploadMouseClicked
        String userName, driveType, laptopModel;
        double score;
        
        // Get user input
        userName = getUserName();
        driveType = getDriveType();
        laptopModel = getLaptopModel();
           
        // Check user input
        if(isDefaultTest == false){
            JOptionPane.showMessageDialog(null, "Please run a default test first", null, JOptionPane.WARNING_MESSAGE);
        }else if(userName.equals("0") && laptopModel.equals("0") && driveType.equals("0")){
            JOptionPane.showMessageDialog(null, "Please fill the empty spaces and select the\ntype of you computer drive", null, JOptionPane.WARNING_MESSAGE);
        }else if(userName.equals("0") && laptopModel.equals("0")){
            JOptionPane.showMessageDialog(null, "Please fill the empty spaces", null, JOptionPane.WARNING_MESSAGE);
        }else if(userName.equals("0") && driveType.equals("0")){
            JOptionPane.showMessageDialog(null, "Please enter a username and select the\ntype of you computer drive", null, JOptionPane.WARNING_MESSAGE);
        }else if(driveType.equals("0") && laptopModel.equals("0")){
            JOptionPane.showMessageDialog(null, "Please enter a laptop model\n(write Desktop if you do not own a laptop) and select the\ntype of you computer drive", null, JOptionPane.WARNING_MESSAGE);
        }else if(userName.equals("0")){
            JOptionPane.showMessageDialog(null, "Please enter a username", null, JOptionPane.WARNING_MESSAGE);
        }else if(laptopModel.equals("0")){
            JOptionPane.showMessageDialog(null, "Please enter a laptop model\n(write Desktop if you do not own a laptop)", null, JOptionPane.WARNING_MESSAGE);
        }else if(driveType.equals("0")){
            JOptionPane.showMessageDialog(null, "Please select the type of your computer drive", null, JOptionPane.WARNING_MESSAGE);
        }else{
            System.out.println(getUserName() + getDriveType() + getLaptopModel() + avgScore);
            // Send data to Database
            try {
                new BenchMarkDatabase();
                BenchMarkDatabase.insertRow(userName, laptopModel, driveType, System.getProperty("os.name"), avgScore);
                BenchMarkDatabase.displayDatabase();
                isDefaultTest = false;
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lbl_BUploadMouseClicked

    private void lbl_BViewRanksMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BViewRanksMouseEntered
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/view_ranks_button_hover.png"));
        lbl_BViewRanks.setIcon(IB);
    }//GEN-LAST:event_lbl_BViewRanksMouseEntered

    private void lbl_BViewRanksMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BViewRanksMouseExited
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/view_ranks_button_default.png"));
        lbl_BViewRanks.setIcon(IB);
    }//GEN-LAST:event_lbl_BViewRanksMouseExited

    private void lbl_BViewRanksMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BViewRanksMousePressed
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/view_ranks_button_pressed.png"));
        lbl_BViewRanks.setIcon(IB);
    }//GEN-LAST:event_lbl_BViewRanksMousePressed

    private void lbl_BViewRanksMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BViewRanksMouseReleased
        ImageIcon IB;
        IB = new ImageIcon(getClass().getResource("/images/view_ranks_button_hover.png"));
        lbl_BViewRanks.setIcon(IB);
    }//GEN-LAST:event_lbl_BViewRanksMouseReleased

    private void lbl_BViewRanksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_BViewRanksMouseClicked
        try {
            new BenchMarkDatabase();
            BenchMarkDatabase.displayDatabase();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lbl_BViewRanksMouseClicked

    private void cb_blockSizeWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_blockSizeWriteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_blockSizeWriteActionPerformed

    private void rb_readMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_readMouseClicked
        //if(rb_read.isSelected() == true){
        //}else{
            cb_blockSizeRead.setVisible(true);
            cb_blockSizeWrite.setVisible(false);
            
            cb_fileSizeRead.setVisible(true);
            cb_fileSize.setVisible(false);
        //}        // TODO add your handling code here:
    }//GEN-LAST:event_rb_readMouseClicked

    private void rb_writeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rb_writeMouseClicked
        //if(rb_write.isSelected() == true){
        //}else{
            cb_blockSizeRead.setVisible(false);
            cb_blockSizeWrite.setVisible(true);
            
            cb_fileSizeRead.setVisible(false);
            cb_fileSize.setVisible(true);
       // }
// TODO add your handling code here:
    }//GEN-LAST:event_rb_writeMouseClicked

    private void rb_SequentialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_SequentialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb_SequentialActionPerformed

    //Switch to Developers Sub-Page
    private void lbl_DevelopersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_DevelopersMouseClicked
        jT_howToUse.setVisible(false);
        jT_Developers.setVisible(true);
        lbl_Developers.setForeground(new Color(24, 186, 129));
        lbl_howToUse.setForeground(new Color(168, 168, 168));  
        
        // Still need to do hovering 
    }//GEN-LAST:event_lbl_DevelopersMouseClicked

    private void lbl_howToUseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_howToUseMouseClicked
        jT_howToUse.setVisible(true);
        jT_Developers.setVisible(false);
        lbl_howToUse.setForeground(new Color(24, 186, 129));
        lbl_Developers.setForeground(new Color(168, 168, 168));  

        // Still need to do hovering 
    }//GEN-LAST:event_lbl_howToUseMouseClicked
 
    public void setLblColor(JLabel lbl){
        lbl.setBackground(new Color(24, 186, 129));
    }
    
    public void resetLblColor(JLabel lbl){
        lbl.setBackground(new Color(9,65,109));
    }
    
    private void setLblHoverColor(JLabel lbl) {
        lbl.setBackground(new Color(6,56,94));
    }                                   
    
    public String getReadWriteMethod(){
        if(rb_Sequential.isSelected())
            return "1";
        return "0";
    }
    
    private String getReadWriteTest() {
        if(rb_read.isSelected())
            return "1";
        return "0";
    }
    
    public String getNumberOfTests(){
      return (String) cb_NumberOfTests.getSelectedItem();
    }

    public String getFileSize(){
        return (String) cb_fileSize.getSelectedItem();
    }

    public String getFileSizeRead(){
        return (String) cb_fileSizeRead.getSelectedItem();
    }
    
    public int getBlockSizeRead(){
        String blockSizeString = (String) cb_blockSizeRead.getSelectedItem();
        int blockSizeDouble = Integer.parseInt(blockSizeString.split(" ")[0]);
        String blockType = blockSizeString.split(" ")[1];
        System.out.println("BLOCK SIZE READ: " + blockType);
        switch (blockType) {
            case "bytes":
                return blockSizeDouble;
            case "KB":
                return blockSizeDouble * 1024;
            default:
                return blockSizeDouble * 1024 * 1024;
        }
    }
    
    public int getBlockSizeWrite(){
        String blockSizeString = (String) cb_blockSizeWrite.getSelectedItem();
        int blockSizeDouble = Integer.parseInt(blockSizeString.split(" ")[0]);
        String blockType = blockSizeString.split(" ")[1];
        System.out.println("BLOCK SIZE WRITE: " + blockType);
        switch (blockType) {
            case "bytes":
                return blockSizeDouble;
            case "KB":
                return blockSizeDouble * 1024;
            default:
                return blockSizeDouble * 1024 * 1024;
        }
    }
    public String getUserName(){
        String nameText = tf_name.getText();
        if(nameText.equals("  nickname or name") || nameText.isEmpty())
            //System.out.println("Please enter username");
            return "0";
        
        return nameText;
    }
    
    public String getLaptopModel(){
        String laptopmodelText = tf_laptopmodel.getText();
        if(laptopmodelText.equals("  leave blank if you have a desktop") || laptopmodelText.isEmpty())
            //System.out.println("Please enter laptopmodel");
            return "0";
        
        return laptopmodelText;
    }
    
    public String getDriveType(){
        String driveText = "SSD";
        if(rb_ssd.isSelected())
            driveText = "SSD";
        else if(rd_hdd.isSelected())
            driveText = "HDD";
        else return "0";
        
        return driveText;
    }
    
      /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ConfigureTestRead;
    private javax.swing.JPanel Help;
    private javax.swing.JPanel RunConfiguration;
    private javax.swing.JPanel UploadScore;
    private javax.swing.JLabel button_defaultConfiguration;
    private javax.swing.JLabel button_start;
    private javax.swing.JLabel button_stop;
    private javax.swing.JComboBox<String> cb_NumberOfTests;
    private javax.swing.JComboBox<String> cb_blockSizeRead;
    private javax.swing.JComboBox<String> cb_blockSizeWrite;
    private javax.swing.JComboBox<String> cb_fileSize;
    private javax.swing.JComboBox<String> cb_fileSizeRead;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextArea jT_Developers;
    private javax.swing.JTextArea jT_howToUse;
    private javax.swing.JLabel lbl_BUpload;
    private javax.swing.JLabel lbl_BViewRanks;
    private javax.swing.JLabel lbl_BlockSize;
    private javax.swing.JLabel lbl_ConfigureTest;
    private javax.swing.JLabel lbl_Developers;
    private javax.swing.JLabel lbl_FileSize;
    private javax.swing.JLabel lbl_Help;
    private javax.swing.JLabel lbl_NumberOfTests;
    private javax.swing.JLabel lbl_RandomAccess;
    private javax.swing.JLabel lbl_RunTest;
    private javax.swing.JLabel lbl_Sequential;
    private javax.swing.JLabel lbl_UploadScore;
    private javax.swing.JLabel lbl_avg;
    private javax.swing.JLabel lbl_hdd;
    private javax.swing.JLabel lbl_howToUse;
    private javax.swing.JLabel lbl_information;
    private javax.swing.JLabel lbl_laptopmodel;
    private javax.swing.JLabel lbl_max;
    private javax.swing.JLabel lbl_min;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_read;
    private javax.swing.JLabel lbl_readTR;
    private javax.swing.JLabel lbl_scoreResult;
    private javax.swing.JLabel lbl_selectDrive;
    private javax.swing.JLabel lbl_ssd;
    private javax.swing.JLabel lbl_transferRate;
    private javax.swing.JLabel lbl_write;
    private javax.swing.JLabel lbl_writeTR;
    private javax.swing.JRadioButton rb_RandomAccess;
    private javax.swing.JRadioButton rb_Sequential;
    private javax.swing.JRadioButton rb_read;
    private javax.swing.JRadioButton rb_ssd;
    private javax.swing.JRadioButton rb_write;
    private javax.swing.JRadioButton rd_hdd;
    private javax.swing.JSeparator s_laptopmodel;
    private javax.swing.JSeparator s_name;
    private javax.swing.JTextField tf_avgRead;
    private javax.swing.JTextField tf_avgWrite;
    private javax.swing.JTextField tf_avgWrite1;
    private javax.swing.JTextField tf_avgWrite2;
    private javax.swing.JTextField tf_avgWrite3;
    private javax.swing.JTextField tf_avgWrite4;
    private javax.swing.JTextField tf_avgWrite5;
    private javax.swing.JTextField tf_avgWrite6;
    private javax.swing.JTextField tf_laptopmodel;
    private javax.swing.JTextField tf_maxRead;
    private javax.swing.JTextField tf_maxWrite;
    private javax.swing.JTextField tf_minRead;
    private javax.swing.JTextField tf_minWrite;
    private javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_score;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/final_icon_2.png")));
    }
 
}
